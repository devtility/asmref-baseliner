<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
  The following properties control the execution of the targets:

  * AsmRefDisableBaselining - set to true to turn off these targets

  * AsmRefIncludePatterns - a space-separated list of glob patterns specifying the files to
        include in the report e.g. "ACME* SubDir1\**\*foo*.dll"
        Defaults to the [Project target file name]*
  
  * AsmRefUpdateBaseline - true/false. Specifies whether the baseline file should be updated
        with the new report when it is generated.
        Defaults to false.

  * AsmRefOutputFilePath - the file path of the report generated for the current build.
        Defaults to "{output directory}\AsmRef_{project name}_Latest.txt"

  * AsmRefBaselineFilePath - the file path of the baseline file to compare against.
        Defaults to "{project file directory}\AsmRefBaseline_[ProjectName].txt"

  * AsmRefIgnoreSourcePublicKeyToken - specifies whether the public key token should be taken
       into account when comparing source assemblies (i.e. the assemblies being baselined)
       Defaults to true.

  * AsmRefSourceVersionCompatibility / AsmRefTargetVersionCompatibility - specifies how
       assembly versions should be compared.
       Possible values: Any, Major, MajorMinor, MajorMinorBuild, Strict
       Defaults to Strict.
       The comparison options for source and target versions can be set independently
       using the above properties. Alternatively, they can be set together using the
       property "AsmRefVersionCompatibility"
      
  Workflow:
  If the baseline comparison file does not exist, the build will generate an initial file
  and save it as the baseline file (in the location indicated by $(AsmRefBaselineFilePath).
  
  If the baseline file exists, the build will generate a new report file for the current
  build and compare it to the baseline file. The task will report an error if the current
  report is different from the baseline.
  
  You should then compare the baseline and new report to check whether the changes to the
  referenced assemblies are correct.
  If they are not correct , fix them.
  If they are correct, update the baseline file. This can be done by building again with
    /p:AsmRefUpdateBaseline=true.

  -->
  <PropertyGroup>
    <AsmRefAssemblyFile Condition="'$(MSBuildRuntimeType)' == 'Core'">$(MSBuildThisFileDirectory)..\lib\netcoreapp2.0\DumpAsmRefs.dll</AsmRefAssemblyFile>
    <AsmRefAssemblyFile Condition="'$(MSBuildRuntimeType)' != 'Core'">$(MSBuildThisFileDirectory)..\lib\net461\DumpAsmRefs.exe</AsmRefAssemblyFile>

    <AsmRefExecCommand Condition="'$(MSBuildRuntimeType)' == 'Core'">dotnet $(AsmRefAssemblyFile)</AsmRefExecCommand>
    <AsmRefExecCommand Condition="'$(MSBuildRuntimeType)' != 'Core'">$(AsmRefAssemblyFile)</AsmRefExecCommand>
  </PropertyGroup>
  
  <UsingTask AssemblyFile="$(AsmRefAssemblyFile)" TaskName="CompareAsmRefReportFiles" />

  <Target Name="CheckAsmRefWorkflow" AfterTargets="Build" Condition="$(AsmRefDisableBaselining) != 'true' " >
    <CallTarget Targets="_EnsureAsmRefFilePathsAreSet" />
    <CallTarget Targets="_GenerateAsmRefReportOnBuild" />
    <CallTarget Targets="_PostGenerateAndRefProcessing" />
  </Target>

  <Target Name="_EnsureAsmRefFilePathsAreSet">
    <PropertyGroup>
      <AsmRefIncludePatterns Condition="$(AsmRefIncludePatterns) == '' ">$(TargetName)*</AsmRefIncludePatterns>
      <AsmRefRootSearchDir Condition="$(AsmRefRootSearchDir) == '' " >$(OutDir)</AsmRefRootSearchDir>
      <AsmRefOutputFilePath Condition="$(AsmRefOutputFilePath) == '' " >$(MSBuildProjectDirectory)\$(OutDir)AsmRef_$(MSBuildProjectName)_Latest.txt</AsmRefOutputFilePath>
      <AsmRefBaselineFilePath Condition="$(AsmRefBaselineFilePath) == '' " >$(MSBuildProjectDirectory)\AsmRef_$(MSBuildProjectName)_Baseline.txt</AsmRefBaselineFilePath>
      <AsmRefLogLevel Condition="$(AsmRefLogLevel) == '' " >Normal</AsmRefLogLevel>
      <AsmRefIgnoreSourcePublicKeyToken Condition="$(AsmRefIgnoreSourcePublicKeyToken) == '' ">true</AsmRefIgnoreSourcePublicKeyToken>

      <!-- Options: Any, Major, MajorMinor, MajorMinorBuild, Strict -->
      <AsmRefVersionCompatibility Condition="$(AsmRefVersionCompatibility)==''">Strict</AsmRefVersionCompatibility>
      <AsmRefSourceVersionCompatibility Condition="$(AsmRefSourceVersionCompatibility)==''">$(AsmRefVersionCompatibility)</AsmRefSourceVersionCompatibility>
      <AsmRefTargetVersionCompatibility Condition="$(AsmRefTargetVersionCompatibility)==''">$(AsmRefVersionCompatibility)</AsmRefTargetVersionCompatibility>
    </PropertyGroup>
  </Target>

  <Target Name="_PostGenerateAndRefProcessing">

    <PropertyGroup>
      <AsmRefBaseLineFileExists Condition="$(AsmRefBaselineFilePath) != '' AND Exists($(AsmRefBaselineFilePath))">true</AsmRefBaseLineFileExists>
      <AsmRefOutputFileExists Condition="$(AsmRefOutputFilePath) != '' AND Exists($(AsmRefOutputFilePath))">true</AsmRefOutputFileExists>
    </PropertyGroup>    

    <Warning Condition="$(AsmRefOutputFileExists) != 'true'"
             Text='AsmRef: The assembly reference output report does not exist. Assembly reference baseline comparison will not be performed. File path: $(AsmRefOutputFilePath)' />

    <!-- Compare the base line and current reports if they both exist and the update flag is not set -->
    <CallTarget
      Targets="_CompareAsmRefReportsOnBuild"
      Condition="$(AsmRefOutputFileExists) == 'true' AND $(AsmRefBaseLineFileExists) == 'true' AND $(AsmRefUpdateBaseline) != 'true' " />

    <!-- Update the baseline if both files exist and the update flag is set -->
    <CallTarget
      Targets="_UpdateAsmRefBaselineFile"
      Condition="$(AsmRefOutputFileExists) == 'true' AND $(AsmRefBaselineFileExists) == 'true' AND $(AsmRefUpdateBaseline) == 'true' " />

    <!-- If the base line report doesn't exist but the current report does, set the current as the baseline -->
    <CallTarget
      Targets="_PublishAsmRefBaselineFile"
      Condition="$(AsmRefOutputFileExists) == 'true' AND $(AsmRefBaselineFileExists) != 'true'" />
  </Target>
  
  <!-- New assembly reference report generation -->
  <Target Name="_GenerateAsmRefReportOnBuild">
    <Warning Condition="$(AsmRefIncludePatterns) == ''" Text='AsmRef: Property "AsmRefIncludePatterns" is not set. New assembly reference baseline will not be generated.' />
    <CallTarget Condition="$(AsmRefIncludePatterns) != ''" Targets="_InternalGenerateAsmRefReportOnBuild" />
  </Target>

  <Target Name="_InternalGenerateAsmRefReportOnBuild" >
    <Message Importance="normal" Text="AsmRef: Assembly reference root search directory: $(AsmRefRootSearchDir)" />
    <Message Importance="normal" Text="AsmRef: Assembly reference include patterns: $(AsmRefIncludePatterns)" />
    <Message Importance="normal" Text="AsmRef: Assembly reference exclude patterns: $(AsmRefExcludePatterns)" />
    <Message Importance="normal" Text="AsmRef: Assembly reference output file: $(AsmRefOutputFilePath)" />
    
    <Exec Command="$(AsmRefExecCommand) -r:$(AsmRefRootSearchDir) -o:$(AsmRefOutputFilePath) -v:$(AsmRefLogLevel) $(AsmRefIncludePatterns) $(AsmRefExcludePatterns)" />
  </Target>
  
  <!-- Comparison of baseline against new assembly reference report -->
  <Target Name="_CompareAsmRefReportsOnBuild" >
    <Message Importance="high" Text="AsmRef: Comparing assembly reference report files..." />   

    <!-- Sanity checks -->
    <Error Condition="$(AsmRefOutputFilePath) == '' " Text="AsmRef: AsmRefOutputFilePath property has not been set" />
    <Error Condition="!Exists($(AsmRefOutputFilePath))" Text="AsmRef: New report does not exist: $(AsmRefOutputFilePath)" />  
    <Error Condition="$(AsmRefBaselineFilePath) == '' " Text="AsmRef: AsmRefBaselineFilePath property has not been set" />
    <Error Condition="!Exists($(AsmRefBaselineFilePath))" Text="AsmRef: Baseline file does not exist: $(AsmRefBaselineFilePath)" />
    <Error Condition="$(AsmRefUpdateBaseline) == 'true'" Text="AsmRef: Should not be comparing files since AsmRefUpdateBaseline is true" />
    <Error Condition="$(AsmRefSourceVersionCompatibility) == '' " Text="AsmRef: AsmRefSourceVersionCompatibility property has not been set" />
    <Error Condition="$(AsmRefTargetVersionCompatibility) == '' " Text="AsmRef: AsmRefTargetVersionCompatibility property has not been set" />

    <CompareAsmRefReportFiles
      BaselineReportFilePath="$(AsmRefBaselineFilePath)"
      CurrentReportFilePath="$(AsmRefOutputFilePath)"
      SourceVersionCompatibility="$(AsmRefSourceVersionCompatibility)"
      TargetVersionCompatibility="$(AsmRefTargetVersionCompatibility)"
      IgnoreSourcePublicKeyToken="$(AsmRefIgnoreSourcePublicKeyToken)" />
  </Target>

  <Target Name="_PublishAsmRefBaselineFile">
    <Message Importance="high" Text="AsmRef: Publishing the baseline assembly reference file to $(AsmRefBaselineFilePath)" />

    <!-- Sanity checks -->
    <Error Condition="$(AsmRefOutputFilePath) == '' " Text="AsmRef: AsmRefOutputFilePath property has not been set" />
    <Error Condition="!Exists($(AsmRefOutputFilePath))" Text="AsmRef: New report does not exist: $(AsmRefOutputFilePath)" />  
    <Error Condition="$(AsmRefBaselineFilePath) == '' " Text="AsmRef: AsmRefBaselineFilePath property has not been set" />
    <Error Condition="Exists($(AsmRefBaselineFilePath))" Text="AsmRef: Baseline file should not already exist: $(AsmRefBaselineFilePath)" />
  
    <Move
      SourceFiles="$(AsmRefOutputFilePath)"
      DestinationFiles="$(AsmRefBaselineFilePath)" 
      OverwriteReadOnlyFiles="true"
      />
  </Target>

  <Target Name="_UpdateAsmRefBaselineFile">
    <Message Importance="high" Text="AsmRef: Updating the baseline assembly reference file at $(AsmRefBaselineFilePath)" />

    <!-- Sanity checks -->
    <Error Condition="$(AsmRefOutputFilePath) == '' " Text="AsmRef: AsmRefOutputFilePath property has not been set" />
    <Error Condition="!Exists($(AsmRefOutputFilePath))" Text="AsmRef: New report does not exist: $(AsmRefOutputFilePath)" />  
    <Error Condition="$(AsmRefBaselineFilePath) == '' " Text="AsmRef: AsmRefBaselineFilePath property has not been set" />
    <Error Condition="!Exists($(AsmRefBaselineFilePath))" Text="AsmRef: Baseline file does not exist: $(AsmRefBaselineFilePath)" />
    <Error Condition="$(AsmRefUpdateBaseline) != 'true'" Text="AsmRef: Should only be updating the baseline if AsmRefUpdateBaseline is true" />
  
    <Copy
      SourceFiles="$(AsmRefOutputFilePath)"
      DestinationFiles="$(AsmRefBaselineFilePath)"
      OverwriteReadOnlyFiles="true"
      Retries="5"
      RetryDelayMilliseconds="100"
      />
  </Target>

</Project>